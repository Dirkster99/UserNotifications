<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
        xmlns:view="clr-namespace:UserNotification.View"
        xmlns:reskeys="clr-namespace:UserNotification.Themes"
       >

    <!-- This style defines the visual of the close button in the notification window -->
    <Style TargetType="{x:Type view:NotificationCloseButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Border" CornerRadius="0" BorderThickness="1"
                                ClipToBounds="False"
                                Background="{DynamicResource {x:Static reskeys:ResourceKeys.CloseNormal}}"
                                BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.NormalBorderBrush}}">
                            <Grid>
                                <TextBlock Text="r"
                                           FontFamily="Marlett"
                                           FontSize="14"
                                           Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.NotificationWindowForeground}}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Padding="0,0,0,1" />

                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.CloseOver}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ClosePressed}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DefaultedBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DefaultedBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DisabledBackgroundBrush}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DisabledBorderBrush}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DisabledForegroundBrush}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>